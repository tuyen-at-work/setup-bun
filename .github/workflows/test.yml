name: 🧪 Test

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

env:
  BUN_VERSION: 1.1.0

permissions:
  contents: write

jobs:
  remove-cache:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🗑️ Remove cache
        run: gh cache delete --all || true
        env:
          GH_TOKEN: ${{ github.token }}

  setup-bun:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    needs: [remove-cache]

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        bun-version:
          - latest
          - canary
          - "1.1.0"
          - "1.x"
          - "1"
          - "> 1.0.0"
          - "< 2"
          # Disable <sha> support for now. This is because Github Artifacts
          # expire after 90 days, and we don't have another source of truth yet.
          # - "822a00c4d508b54f650933a73ca5f4a3af9a7983" # 1.0.0 commit

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🛠️ Setup Bun
        uses: ./
        id: setup_bun
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: ▶️ Run Bun
        id: run_bun
        run: |
          bun --version

  setup-bun-from-file:
    name: setup-bun from (${{ matrix.os }}, ${{ matrix.file.name }})
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    needs: [remove-cache]
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

        file:
          - name: package.json (bun@${{ env.BUN_VERSION }})
            file: package.json
            run: |
              echo "$(jq '. += {"packageManager": "bun@$BUN_VERSION"}' package.json)" > package.json

          - name: /foo/package.json (bun@${{ env.BUN_VERSION }})
            file: /foo/package.json
            run: |
              echo "$(jq '. += {"packageManager": "bun@$BUN_VERSION"}' package.json)" > /foo/package.json

          - name: package.json (yarn@bun@${{ env.BUN_VERSION }})
            file: package.json
            run: |
              echo "$(jq '. += {"packageManager": "yarn@bun@$BUN_VERSION"}' package.json)" > package.json

          - name: .tool-versions (bun ${{ env.BUN_VERSION }})
            file: .tool-versions
            run: echo "bun $BUN_VERSION" > .tool-versions

          - name: .tool-versions (bun${{ env.BUN_VERSION }})
            file: .tool-versions
            run: echo "bun$BUN_VERSION" > .tool-versions

          - name: .tool-versions (bun  ${{ env.BUN_VERSION }})
            file: .tool-versions
            run: echo "bun $BUN_VERSION" > .tool-versions

          - name: .bumrc (${{ env.BUN_VERSION }})
            file: .bumrc
            run: echo "$BUN_VERSION" > .bumrc

          - name: .bun-version (${{ env.BUN_VERSION }})
            file: .bun-version
            run: echo "$BUN_VERSION" > .bun-version

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📄 Setup file
        run: ${{ matrix.file.run }}

      - name: 🛠️ Setup Bun
        uses: ./
        with:
          bun-version-file: ${{ matrix.file.file }}

      - name: ⚖️ Compare versions
        uses: ./.github/actions/compare-bun-version
        with:
          bun-version: "${{ env.BUN_VERSION }}"

  setup-bun-download-url:
    name: setup-bun from (${{ matrix.os }}, download url)
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    needs: [remove-cache]

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🛠️ Setup Bun
        uses: ./
        id: setup_bun
        with:
          bun-download-url: "https://github.com/oven-sh/bun/releases/latest/download/bun-${{runner.os == 'macOS' && 'darwin' || runner.os}}-${{ runner.arch == 'X64' && 'x64' || 'aarch64' }}.zip"

      - name: ▶️ Run Bun
        id: run_bun
        run: |
          bun --version
